resource_types:
  - name: concourse-pipeline
    type: docker-image
    source:
      repository: concourse/concourse-pipeline-resource
  - name: time
    type: docker-image
    source:
      repository: concourse/time-resource

resources:
  - name: 5m
    type: time
    source:
      interval: 5m
      start: 6:00 AM
      stop: 7:00 PM
      location: America/Montreal
  - name: branch-script
    type: git
    icon: github-circle
    source:
      uri: https://github.com/phturb/concourse-multibranch-autopipeline.git
  - name: pipeline-git
    type: git
    icon: github-circle
    source:
      uri: https://github.com/phturb/concourse-multibranch-autopipeline.git
  - name: my-pipeline
    type: concourse-pipeline
    icon: pipe
    source:
      target: "http://172.20.0.3:8080"
      insecure: "true"
      teams:
        - name: ((team_name))
          username: ((pass))
          password: ((user))

jobs:
  - name: multibranch-pipeline-generator
    public: true
    plan:
      - get: 5m
        trigger: true
      - get: branch-script
      - get: pipeline-git
      - get: my-pipeline
      - task: create-branch-pipeline
        config:
          inputs:
            - name: branch-script
            - name: pipeline-git
          outputs:
            - name: ((out_folder))
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ddphilippeturner/alpine-python-script
              tag: "1.0"
          params:
            REPLACED_RESSOURCE: ((replaced_ressource))
            PROJECT: ((project))
            REPO: ((repo))
            OUT_FOLDER: ((out_folder))
            PIPELINE_FILENAME: pipeline-git/((pipeline_filename))
            GIT_TYPE: ((git_type))
            GIT_API: ((api_url))
            API_USERNAME: ""
            API_PASSWORD: ""
            BRANCH_EXCEPTION: "prod test2"
          run:
            dir: ./branch-script
            path: python
            args:
              - main.py
      - put: my-pipeline
        params:
          pipelines:
            - name: ((pipeline_name))
              team: ((team_name))
              config_file: pipeline/new_pipeline.yaml
